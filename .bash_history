Â–git clone https://github.com/allisonIsCoding/precourse-part-1.git
precourse
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
Â–Â–Â–
cd /etc/profile.d/
explorer .
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
# add ~/.bash_profile if needed for executing ~/.bashrc
if [ -e ~/.bashrc -a ! -e ~/.bash_profile -a ! -e ~/.bash_login -a ! -e ~/.profile ]; then   printf "\n\033[31mWARNING: Found ~/.bashrc but no ~/.bash_profile, ~/.bash_login or ~/.profile.\033[m\n\n";   echo "This looks like an incorrect setup.";   echo "A ~/.bash_profile that loads ~/.bashrc will be created for you."
  cat >~/.bash_profile <<-\EOF
	# generated by Git for Windows
	test -f ~/.profile && . ~/.profile
	test -f ~/.bashrc && . ~/.bashrc
	EOF
 fi
# Some good standards, which are not used if the user
# creates his/her own .bashrc/.bash_profile
# --show-control-chars: help showing Korean or accented characters
alias ls='ls -F --color=auto --show-control-chars'
alias ll='ls -l'
case "$TERM" in xterm*) 	for name in node ipython php php5 psql python2.7; 	do 		case "$(type -p "$name".exe 2>/dev/null)" in 		''|/usr/bin/*) continue;; 		esac; 		alias $name="winpty $name.exe"; 	done; 	;; esac
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
# Add bin path in the home directory ontop of the PATH variable
export PATH="$HOME/bin:$PATH"
# Allow SSH to ask via GUI if the terminal is not usable
test -n "$SSH_ASKPASS" || { 	case "$MSYSTEM" in 	MINGW64) 		export DISPLAY=needs-to-be-defined; 		export SSH_ASKPASS=/mingw64/libexec/git-core/git-gui--askpass; 		;; 	MINGW32) 		export DISPLAY=needs-to-be-defined; 		export SSH_ASKPASS=/mingw32/libexec/git-core/git-gui--askpass; 		;; 	esac; }
# To the extent possible under law, the author(s) have dedicated all 
# copyright and related and neighboring rights to this software to the 
# public domain worldwide. This software is distributed without any warranty. 
# You should have received a copy of the CC0 Public Domain Dedication along 
# with this software. 
# If not, see <https://creativecommons.org/publicdomain/zero/1.0/>. 
# /etc/profile.d/lang.sh: sourced by /etc/profile.
# The latest version as installed by the MSYS2 Setup program can
# always be found at /etc/defaults/etc/profile.d/lang.sh
# Modifying /etc/profile.d/lang.sh directly will prevent
# setup from updating it.
# System-wide lang.sh file
# if no locale variable is set, indicate terminal charset via LANG
test -z "${LC_ALL:-${LC_CTYPE:-$LANG}}" && export LANG=$(exec /usr/bin/locale -uU)
# Set path to perl scriptdirs if they exist
# https://wiki.archlinux.org/index.php/Perl_Policy#Binaries_and_scripts
# Added /usr/bin/*_perl dirs for scripts
# Remove /usr/lib/perl5/*_perl/bin in next release
[ -d /usr/bin/site_perl ] && PATH=$PATH:/usr/bin/site_perl
[ -d /usr/lib/perl5/site_perl/bin ] && PATH=$PATH:/usr/lib/perl5/site_perl/bin
[ -d /usr/bin/vendor_perl ] && PATH=$PATH:/usr/bin/vendor_perl
[ -d /usr/lib/perl5/vendor_perl/bin ] && PATH=$PATH:/usr/lib/perl5/vendor_perl/bin
[ -d /usr/bin/core_perl ] && PATH=$PATH:/usr/bin/core_perl
export PATH
# If you have modules in non-standard directories you can add them here.
#export PERLLIB=dir1:dir2
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
Â–
git config --global user.name "Allison"
git config --global user.name
PROMPT_COMMAND='PS1="$(gitPrompt)"
Allison
C:\Program Files\Git\etc\profile.d\
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
if test -f /etc/profile.d/git-sdk.sh; then 	TITLEPREFIX=SDK-${MSYSTEM#MINGW}; else 	TITLEPREFIX=$MSYSTEM; fi
if test -f ~/.config/git/git-prompt.sh; then 	. ~/.config/git/git-prompt.sh; else 	PS1='\[\033]0;$TITLEPREFIX:$PWD\007\]' # set window title; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'\[\033[32m\]'       # change to green; 	PS1="$PS1"'\u@\h '             # user@host<space>; 	PS1="$PS1"'\[\033[35m\]'       # change to purple; 	PS1="$PS1"'$MSYSTEM '          # show MSYSTEM; 	PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow; 	PS1="$PS1"'\w'                 # current working directory; 	if test -z "$WINELOADERNOEXEC"; 	then 		GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"; 		COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"; 		COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"; 		COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"; 		if test -f "$COMPLETION_PATH/git-prompt.sh"; 		then 			. "$COMPLETION_PATH/git-completion.bash"; 			. "$COMPLETION_PATH/git-prompt.sh"; 			PS1="$PS1"'\[\033[36m\]'  # change color to cyan; 			PS1="$PS1"'`__git_ps1`'   # bash function; 		fi; 	fi; 	PS1="$PS1"'\[\033[0m\]'        # change color; 	PS1="$PS1"'\n'                 # new line; 	PS1="$PS1"'$ '                 # prompt: always $; fi
MSYS2_PS1="$PS1"               # for detection by MSYS2 SDK's bash.basrc
# Evaluate all user-specific Bash completion scripts (if any)
if test -z "$WINELOADERNOEXEC"; then 	for c in "$HOME"/bash_completion.d/*.bash; 	do 		test ! -f "$c" || 		. "$c"; 	done; fi
psql --version
